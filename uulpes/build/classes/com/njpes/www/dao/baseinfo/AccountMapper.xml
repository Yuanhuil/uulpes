<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.njpes.www.dao.baseinfo.AccountMapper">
    <resultMap id="BaseResultMap" type="com.njpes.www.entity.baseinfo.Account">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="idcard" property="idcard" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="type_flag" property="typeFlag" jdbcType="INTEGER" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="admin" property="admin" jdbcType="INTEGER" />
        <result column="theme" property="theme" jdbcType="VARCHAR" />
        <result column="realname" property="realname" jdbcType="VARCHAR" />
        <result column="dogid" property="dogid" jdbcType="INTEGER" />
        <result column="isdoglongin" property="isdoglongin" jdbcType="VARCHAR" />
        <collection property="organizationJobs" ofType="com.njpes.www.entity.baseinfo.AccountOrgJob">
            <id column="aoj_id" property="id" jdbcType="BIGINT" />
            <result column="org_id" property="orgId" jdbcType="BIGINT" />
            <result column="userId" property="userId" jdbcType="BIGINT" />
            <result column="job_id" property="jobId" jdbcType="BIGINT" />
        </collection>
    </resultMap>
    <!-- 史斌测试将所有id转成hashmap -->
    <resultMap id="pairMap" type="java.util.Map">
        <result column="id" property="key" jdbcType="VARCHAR" />
        <result column="value" property="value" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List">
        id, idcard,username, password, create_time, update_time, type_flag, state, admin,theme,realname,isdoglongin,dogid
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        t.id, idcard, username, password, create_time, update_time, type_flag, state, t.theme,t.realname,t.isdoglongin,t.dogid
        ,j.id as aoj_id,user_id,org_id,job_id
        from account t left join user_org_job j on t.id = j.user_id
        where t.id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectStudentByUniqueCol" resultType="com.njpes.www.entity.baseinfo.Account" parameterType="java.util.Map">
        select
        t.id, idcard, username, password, create_time, update_time, type_flag, state, t.theme,t.realname,t.isdoglongin,t.dogid
        from account t left join student s on t.id = s.account_id
        where t.idcard = #{idcard,jdbcType=BIGINT}
    </select>
    <select id="selectTeacherByUniqueCol" resultType="com.njpes.www.entity.baseinfo.Account" parameterType="java.util.Map">
        select
        a.id, idcard, username, password, create_time, update_time, type_flag, state, a.theme,a.realname,a.isdoglongin,a.dogid
        from account a left join teacher t on a.id = t.account_id
        where a.idcard = #{idcard,jdbcType=BIGINT}
    </select>
    <select id="selectUserByUniqueCol" resultType="java.lang.Integer">
        SELECT
        COUNT(id)
        FROM
        (
        SELECT a.id FROM account a WHERE a.idcard = #{cardNo,jdbcType=VARCHAR}
        UNION
        SELECT s.id FROM student s WHERE s.sfzjh =
        #{cardNo,jdbcType=VARCHAR}
        UNION
        SELECT t.id FROM teacher t WHERE t.sfzjh = #{cardNo,jdbcType=VARCHAR}
        UNION
        SELECT
        e.id FROM ecuser e WHERE e.sfzjh = #{cardNo,jdbcType=VARCHAR}
        )b
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from account
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteParentByPrimaryKey" parameterType="java.lang.Long">
        delete from account
        where id = #{id,jdbcType=BIGINT} and type_flag=3
    </delete>
    <insert id="insert" parameterType="com.njpes.www.entity.baseinfo.Account" useGeneratedKeys="true"
        keyProperty="id">
        insert into account (id, idcard,username, password,
        create_time, update_time, type_flag,
        state,admin,realname,isdoglongin,dogid)
        values (#{id,jdbcType=BIGINT}, #{idcard,jdbcType=VARCHAR},#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{typeFlag,jdbcType=INTEGER},
        #{state,jdbcType=INTEGER},#{admin,jdbcType=INTEGER},#{realname,jdbcType=VARCHAR},
        #{isdoglongin,jdbcType=VARCHAR},#{dogid,jdbcType=INTEGER})
    </insert>
    <insert id="insertUserOrgJobSelective">
        <foreach collection="organizationJobs" item="item" index="index" separator=";">
            insert into user_org_job
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="item.id != null">
                    id,
                </if>
                <if test="item.orgId != null">
                    org_id,
                </if>
                <if test="item.userId != null">
                    user_id,
                </if>
                <if test="item.jobId != null">
                    job_id
                </if>
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="item.id != null">
                    #{item.id,jdbcType=BIGINT},
                </if>
                <if test="item.orgId != null">
                    #{item.orgId,jdbcType=BIGINT},
                </if>
                <if test="item.userId != null">
                    #{item.userId,jdbcType=BIGINT},
                </if>
                <if test="item.jobId != null">
                    #{item.jobId,jdbcType=BIGINT}
                </if>
            </trim>
        </foreach>
    </insert>
    <insert id="insertSelective" parameterType="com.njpes.www.entity.baseinfo.Account" useGeneratedKeys="true"
        keyProperty="id">
        insert into account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="idcard != null">
                idcard,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="typeFlag != null">
                type_flag,
            </if>
            <if test="admin != null">
                admin,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="theme != null">
                theme,
            </if>
            <if test="realname != null">
                realname,
            </if>
            <if test="isdoglongin != null">
                isdoglongin,
            </if>
            <if test="dogid >1">
                dogid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="idcard != null">
                #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="typeFlag != null">
                #{typeFlag,jdbcType=INTEGER},
            </if>
            <if test="admin != null">
                #{admin,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="theme != null">
                #{theme,jdbcType=INTEGER},
            </if>
            <if test="realname != null">
                #{realname,jdbcType=VARCHAR},
            </if>
            <if test="isdoglongin != null">
                #{isdoglongin,jdbcType=VARCHAR},
            </if>
            <if test="dogid > 1">
                #{dogid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <!-- 批量插入 -->
    <insert id="insertBatch" useGeneratedKeys="true" parameterType="java.util.List">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        insert into account (idcard,username, password,
        create_time, update_time, type_flag,
        state,admin,theme,realname,isdoglongin,dogid)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.idcard,jdbcType=VARCHAR},#{item.username,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.typeFlag,jdbcType=INTEGER},
            #{item.state,jdbcType=INTEGER},#{item.admin,jdbcType=INTEGER},#{item.theme,jdbcType=INTEGER},
            #{item.realname,jdbcType=VARCHAR},#{item.isdoglongin,jdbcType=VARCHAR},#{item.dogid,jdbcType=INTEGER})
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.njpes.www.entity.baseinfo.Account">
        update account
        <set>
            <if test="idcard != null">
                idcard = #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="typeFlag != null">
                type_flag = #{typeFlag,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="theme != null">
                theme = #{theme,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                realname = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="isdoglongin != null">
                isdoglongin = #{isdoglongin,jdbcType=VARCHAR},
            </if>
            <if test="dogid > 1">
                dogid = #{dogid,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.njpes.www.entity.baseinfo.Account">
        update account
        set
        idcard = #{idcard,jdbcType=VARCHAR},
        username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        type_flag = #{typeFlag,jdbcType=INTEGER},
        state = #{state,jdbcType=INTEGER},
        theme=#{theme,jdbcType=VARCHAR},
        realname = #{realname,jdbcType=VARCHAR},
        isdoglongin = #{isdoglongin,jdbcType=VARCHAR},
        dogid = #{dogid,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <!-- 批量更新 -->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" open="" close="" separator=";">
            update account
            <set>
                idcard = #{item.idcard,jdbcType=VARCHAR},
                username = #{item.username,jdbcType=VARCHAR},
                password = #{item.password,jdbcType=VARCHAR},
                create_time = #{item.createTime,jdbcType=TIMESTAMP},
                update_time = #{item.updateTime,jdbcType=TIMESTAMP},
                type_flag = #{item.typeFlag,jdbcType=INTEGER},
                state = #{item.state,jdbcType=INTEGER},
                theme=#{item.theme,jdbcType=VARCHAR},
                realname = #{item.realname,jdbcType=VARCHAR},
                isdoglongin = #{item.isdoglongin,jdbcType=VARCHAR},
                dogid = #{item.dogid,jdbcType=INTEGER}
            </set>
            <where>
                idcard = #{item.idcard,jdbcType=BIGINT}
            </where>
        </foreach>
    </update>
    <select id="findByUsername" resultMap="BaseResultMap">
        select
        t.id, idcard, username, password, create_time, update_time, type_flag, admin,state, t.theme,realname,t.isdoglongin,t.dogid
        ,j.id as aoj_id,user_id,org_id,job_id
        from account t
        left join user_org_job j on t.id = j.user_id
        left join organization o on j.org_id = o.id
        where t.username = #{username,jdbcType=VARCHAR}
        <choose>
            <when test="logintype == 1">
                and (o.org_type = '1' or o.org_type = '2' or o.org_type = '3')
            </when>
            <otherwise>
                and o.org_type = #{logintype,jdbcType=VARCHAR}
            </otherwise>
        </choose>
    </select>
    <select id="findByDogid" resultMap="BaseResultMap">
        select
        t.id, idcard, username, password, create_time, update_time, type_flag, admin,state, t.theme,realname,t.isdoglongin,t.dogid
        ,j.id as aoj_id,user_id,org_id,job_id
        from account t
        left join user_org_job j on t.id = j.user_id
        left join organization o on j.org_id = o.id
        where t.dogid = #{dogid,jdbcType=INTEGER}
        <choose>
            <when test="logintype == 1">
                and (o.org_type = '1' or o.org_type = '2')
            </when>
            <otherwise>
                and o.org_type = #{logintype,jdbcType=VARCHAR}
            </otherwise>
        </choose>
    </select>
    <select id="findUserByIdCard" resultMap="BaseResultMap">
        select
        t.id, idcard,username, password, create_time, update_time, type_flag, admin,state,realname,t.isdoglongin,t.dogid
        ,j.id as aoj_id,user_id,org_id,job_id
        from account t left join user_org_job j on t.id = j.user_id
        where t.idcard = #{idcard,jdbcType=VARCHAR}
    </select>
    <select id="getAllIds" resultMap="pairMap">
        select id, 1 value from account
    </select>
    <select id="findUsersByOrgid" resultMap="BaseResultMap">
        select
        t.id, idcard,username, password, create_time, update_time, type_flag, admin,state,realname,t.isdoglongin,t.dogid
        ,j.id as aoj_id,user_id,org_id,job_id
        from account t left join user_org_job j on t.id = j.user_id
        where j.org_id = #{orgid,jdbcType=BIGINT}
        <if test="flag != null and flag != '' "></if>
        and type_flag=#{flag,jdbcType=INTEGER}
    </select>
    <select id="getMaxId" resultType="java.lang.Long">
        select max(id) from account
    </select>
    <select id="checkUser" resultType="java.lang.Integer">
        select count(1) from account where username=#{username,jdbcType=VARCHAR} or idcard =#{username,jdbcType=VARCHAR}
    </select>
    <update id="resetPasswd">
        update account set password=#{passwd,jdbcType=VARCHAR} where id=#{id,jdbcType=BIGINT}
    </update>

</mapper>