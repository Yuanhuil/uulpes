package com.njpes.www.dao.consultcenter;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.njpes.www.entity.consultcenter.Analyze;
import com.njpes.www.utils.PageParameter;

public interface AnalyzeMapper {

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table coach_analyze
     * 
     * @mbggenerated Thu Jun 25 21:40:18 CST 2015
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table coach_analyze
     * 
     * @mbggenerated Thu Jun 25 21:40:18 CST 2015
     */
    int insert(Analyze record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table coach_analyze
     * 
     * @mbggenerated Thu Jun 25 21:40:18 CST 2015
     */
    int insertSelective(Analyze record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table coach_analyze
     * 
     * @mbggenerated Thu Jun 25 21:40:18 CST 2015
     */
    Analyze selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table coach_analyze
     * 
     * @mbggenerated Thu Jun 25 21:40:18 CST 2015
     */
    int updateByPrimaryKeySelective(Analyze record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table coach_analyze
     * 
     * @mbggenerated Thu Jun 25 21:40:18 CST 2015
     */
    int updateByPrimaryKey(Analyze record);

    /**
     * @Description:
     * @param analyze
     * @param page
     * @param beginDate
     * @param endDate
     * @return
     */
    List<Analyze> selectEntityByPage(@Param("analyze") Analyze analyze, @Param("page") PageParameter page,
            @Param("beginDate") Date beginDate, @Param("endDate") Date endDate);

    List<Map> count(@Param("string") String string, @Param("analyze") Analyze analyze,
            @Param("beginDate") Date beginDate, @Param("endDate") Date endDate);

    List<Map> countInSchool(@Param("string") String string, @Param("analyze") Analyze analyze,
            @Param("beginDate") Date beginDate, @Param("endDate") Date endDate);

    List<Map> countInCounty(@Param("string") String string, @Param("analyze") Analyze analyze,
            @Param("beginDate") Date beginDate, @Param("endDate") Date endDate);

    List<Map> countInCity(@Param("string") String string, @Param("analyze") Analyze analyze, @Param("xzxs") String xzxs,
            @Param("beginDate") Date beginDate, @Param("endDate") Date endDate);

    List<Map> count1(@Param("string") String string, @Param("analyze") Analyze analyze,
            @Param("beginDate") Date beginDate, @Param("endDate") Date endDate);

    List<Map> count1InSchool(@Param("string") String string, @Param("analyze") Analyze analyze,
            @Param("beginDate") Date beginDate, @Param("endDate") Date endDate);

    List<Map> count1InCounty(@Param("string") String string, @Param("analyze") Analyze analyze,
            @Param("beginDate") Date beginDate, @Param("endDate") Date endDate);

    List<Map> count1InCity(@Param("string") String string, @Param("analyze") Analyze analyze,
            @Param("xzxs") String xzxs, @Param("beginDate") Date beginDate, @Param("endDate") Date endDate);
}