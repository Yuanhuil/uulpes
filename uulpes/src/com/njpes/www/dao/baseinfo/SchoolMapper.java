package com.njpes.www.dao.baseinfo;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.njpes.www.entity.baseinfo.Role;
import com.njpes.www.entity.baseinfo.organization.School;
import com.njpes.www.utils.PageParameter;

public interface SchoolMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table school
     *
     * @mbggenerated Mon May 25 21:52:24 CST 2015
     */
    int deleteByPrimaryKey(Long id);

    int deleteByOrgid(@Param("orgid") Long orgid);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table school
     *
     * @mbggenerated Mon May 25 21:52:24 CST 2015
     */
    int insert(School record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table school
     *
     * @mbggenerated Mon May 25 21:52:24 CST 2015
     */
    int insertSelective(School record);

    /**
     * 批量导入
     * 
     * @param schools
     * @return
     */
    int insertBatch(List<School> schools);

    /**
     * 批量插入
     * 
     * @param orgs
     * @return
     */
    int updateBatch(List<School> schs);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table school
     *
     * @mbggenerated Mon May 25 21:52:24 CST 2015
     */
    School selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table school
     *
     * @mbggenerated Mon May 25 21:52:24 CST 2015
     */
    int updateByPrimaryKeySelective(School record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table school
     *
     * @mbggenerated Mon May 25 21:52:24 CST 2015
     */
    int updateByPrimaryKeyWithBLOBs(School record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table school
     *
     * @mbggenerated Mon May 25 21:52:24 CST 2015
     */
    int updateByPrimaryKey(School record);

    /**
     * 根据学校的组织机构id获得学校信息
     * 
     * @author 赵忠诚
     */
    School selectSchoolInfoBySchoolOrgId(@Param("orgid") long orgid);

    /**
     * 根据组织机构id获取学校信息
     * 
     * @author 赵忠诚
     */
    School selectSchoolInfoByOrgId(@Param("orgid") long orgid);

    List<Role> getTeacherRoles(long orgid);

    public List<School> getSchoolsAccordingEducommission(@Param("orgid") int orgId);

    public List<School> getSchoolsAccordingOrgId(@Param("orgId") int orgId);

    public List<School> getSchoolsAccordingCountyIds(@Param("countyids") List<String> countyids);

    public List<School> getSchoolAccordingCityIds(@Param("cityIds") List<String> cityIds);

    public List<School> getSchoolAccordingTownIds(@Param("townIds") List<String> townIds);

    public List<String> getSchoolnamesByOrgids(String[] ids);

    /**
     * 根据名称查询学校信息
     * 
     * @param name
     * @return
     */
    public List<School> getSchoolByName(@Param("name") String name);

    public List<School> selectSubSchoolsInWebQueryByPage(@Param("school") School school,
            @Param("page") PageParameter page);

    public List<Map> getDirectTrainForSchools(@Param("code") String code);

	String getSchoolnameByOrgid(String orgid);
}