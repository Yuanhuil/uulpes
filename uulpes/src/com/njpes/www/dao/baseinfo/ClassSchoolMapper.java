package com.njpes.www.dao.baseinfo;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.njpes.www.entity.baseinfo.organization.ClassSchool;
import com.njpes.www.utils.PageParameter;

/**
 * @author huangc
 */
public interface ClassSchoolMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table class
     *
     * @mbggenerated Tue May 26 20:30:44 CST 2015
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table class
     *
     * @mbggenerated Tue May 26 20:30:44 CST 2015
     */
    int insert(ClassSchool record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table class
     *
     * @mbggenerated Tue May 26 20:30:44 CST 2015
     */
    int insertSelective(ClassSchool record);

    // 史斌增加批量插入
    int insertBatch(List<ClassSchool> classes);

    // 史斌增加批量更新
    int updateBatch(List<ClassSchool> classes);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table class
     *
     * @mbggenerated Tue May 26 20:30:44 CST 2015
     */
    ClassSchool selectByPrimaryKey(Long id);

    List selectByBH(@Param("bh") String bh);

    List selectByBzrgh(@Param("bzrgh") String bzrgh);

    List selectByBzrAccountid(@Param("bzrid") long bzrid);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table class
     *
     * @mbggenerated Tue May 26 20:30:44 CST 2015
     */
    int updateByPrimaryKeySelective(ClassSchool record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table class
     *
     * @mbggenerated Tue May 26 20:30:44 CST 2015
     */
    int updateByPrimaryKey(ClassSchool record);

    /**
     * @author 赵忠诚
     */
    public List<ClassSchool> selectClassByGradeInSchool(@Param("orgid") long schoolorgid, @Param("xd") int xd,
            @Param("grade") String gradeid, @Param("flozen_flag") int flozen_flag);

    /**
     * 根据学生id查询学生所在班级信息
     * 
     * @param studentId
     * @return ClassSchool 理论上返回一条或者0条记录，除非有错误数据发生。
     * @author 赵忠诚
     */
    public ClassSchool selectClassInfo(@Param("studentId") long studentId);

    /**
     * 根据学校编码获得所有班级
     * 
     * @param schoolCode
     *            学校编号,flozen_flag是否已毕业
     */
    public List<ClassSchool> selectClassBySchool(@Param("orgid") long schoolorgid);

    /**
     * 根据学校编码以及年级id查看所有班级情况
     * 
     * @param schoolcode
     * @return gradeid gradecode表id
     * @author 赵忠诚
     */
    public List<ClassSchool> selectClassesByPage(@Param("entity") ClassSchool entity, @Param("page") PageParameter page,
            @Param("flozen_flag") int flozen_flag);

    /**
     * 根据学校编码以及年级id查看所有班级情况
     * 
     * @param schoolcode
     * @return gradeid gradecode表id
     * @author 赵忠诚
     */
    public List<ClassSchool> selectAllClasses(@Param("entity") ClassSchool entity,
            @Param("flozen_flag") int flozen_flag);

    /**
     * 获得班级根据学校和年级id
     * 
     * @param schoolCode
     * @param gradeid
     * @return
     */
    public List<ClassSchool> selectClassByGradeIdInSchool(@Param("orgid") long schoolorgid,
            @Param("gradeid") int gradeid, @Param("flozen_flag") int flozen_flag);

    // public List<ClassSchool>
    // selectClassByGradeIdInSchool(@Param("xxdm")String xxdm,
    // @Param("gradeid")String gradeid);
    // 班级升级
    public int upgrade(@Param("orgid") long orgid, @Param("xxxz") int xxxz, @Param("bybgradeid") int bybgradeid,
            @Param("bxlxm") String bxlxm);

    // 毕业班处理
    public int flozen(@Param("orgid") long orgid, @Param("bybgradeid") int bybgradeid,
            @Param("flozen_date") String flozen_date);

}